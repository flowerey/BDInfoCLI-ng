# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        repository: 'UniqProject/BDInfo'
        ref: 'dev'

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 5.x

    #- name: Migrate
      #continue-on-error: true
      #run: |
        #dotnet tool install --global Project2015To2017.Migrate2019.Tool
        #dotnet migrate-2019 /help || true
        #dotnet-migrate-2019 --verbosity detailed migrate * || dotnet-migrate-2019 --verbosity detailed migrate BDInfo.sln
        #git status || true

    - name: Setup dotnet sdk 4.8
      run: |
        docker run -d mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-ltsc2022
        docker run -d mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-ltsc2022
      continue-on-error: true

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      continue-on-error: true
      run: |
        msbuild BDInfo.sln -t:Restore
        msbuild BDInfo.sln -t:Build -p:Configuration=$env:Configuration -p:OutDir=/usr/src/app/build/
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Show
      run: |
        ls -lA * **/obj/ **/obj/{Release,Debug}/* || true
        ls -lA /usr/src/app/* || true
      shell: bash
